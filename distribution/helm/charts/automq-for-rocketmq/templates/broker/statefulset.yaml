# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "rocketmq-broker.clusterName" . }}-{{ include "rocketmq-broker.fullname" . }}
spec:
  replicas: {{ .Values.broker.replicaCount }}
  serviceName: {{ include "rocketmq-broker.clusterName" . }}-{{ include "rocketmq-broker.fullname" . }}
  selector:
    matchLabels:
      {{- include "rocketmq-broker.selectorLabels" . | nindent 6 }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "rocketmq-broker.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: broker
          image: {{ include "rocketmq-broker.brokerImage" . }}
        {{- if $.Values.broker.image.pullPolicy }}
          imagePullPolicy: {{ $.Values.broker.image.pullPolicy }}
        {{- end }}
          command: [ "/bin/sh" ]
          args: [ "-c", "./run-server.sh com.automq.rocketmq.broker.BrokerStartup -c /etc/automq-for-rocketmq/broker.conf" ]
          env:
            - name: ROCKETMQ_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CLUSTER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/instance']
            - name: INSTANCE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/name']
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - name: broker
              containerPort: {{ .Values.broker.service.port }}
              protocol: TCP
          readinessProbe:
            failureThreshold: 10
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.broker.service.port }}
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.broker.service.port }}
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.broker.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/automq-for-rocketmq
              name: broker-config
            {{- if .Values.broker.storage.local.persistence.enabled }}
            - mountPath: /root/logs
              name: broker-storage
            {{- end }}
      {{- with .Values.broker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: broker-config
          configMap:
            name: {{ include "rocketmq-broker.clusterName" . }}-broker-conf
{{- if .Values.broker.storage.local.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: broker-storage
      spec:
        accessModes:
          - ReadWriteOnce
        {{- if .Values.broker.storage.local.persistence.storageClass }}
        storageClassName: {{ .Values.broker.storage.local.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.broker.storage.local.persistence.size }}
{{- end }}