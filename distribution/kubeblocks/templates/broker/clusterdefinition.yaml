# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "rocketmq-broker.selectorLabels" . | nindent 8 }}
spec:
  type: rocketmq-on-s3
  componentDefs:
    - name: rocketmq-on-s3-broker
      description: |-
        Rocketmq broker that act as both brokers and controllers are referred to as "combined" servers.
      workloadType: Stateful
      characterType: rocketmq-broker
      probes:
      monitor:
      configSpecs:
        - name: broker-conf
          templateRef: broker-conf
          volumeName: broker-conf
          namespace: {{ .Release.Namespace }}
      scriptSpecs:
      service:
        ports:
          - name: rocketmq-broker
            targetPort: rocketmq-broker
            port: 8081
      podSpec:
        containers:
          - name: broker
            command: [ "/bin/sh" ]
            args: [ "-c", "./run-server.sh com.automq.rocketmq.broker.BrokerStartup -c /home/rocketmq/rocketmq-on-s3-5.1.3/conf/broker/$(POD_NAME)" ]
            env:
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: CLUSTER_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['app.kubernetes.io/cluster']
              - name: INSTANCE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['app.kubernetes.io/name']
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: BROKER_MEM
                value: {{ .Values.broker.jvmMemory }}
            ports:
              - name: rocketmq-broker
                containerPort: 8081
                protocol: TCP
            readinessProbe:
              failureThreshold: 3
              initialDelaySeconds: 60
              periodSeconds: 15
              successThreshold: 1
              tcpSocket:
                port: rocketmq-broker
              timeoutSeconds: 1
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 60
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 5
              tcpSocket:
                port: rocketmq-broker
            startupProbe:
              failureThreshold: 30
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
              tcpSocket:
                port: rocketmq-broker
            volumeMounts:
              - mountPath: /home/rocketmq/rocketmq-on-s3-5.1.3/conf/broker
                name: broker-conf
              - mountPath: /root/logs/rocketmqlogs
                name: broker-storage
        volumes:
          - name: broker-storage
            hostPath:
              path: /root/logs/rocketmqlogs
              type: DirectoryOrCreate
