<!--
  ~ Copyright 2024, AutoMQ CO.,LTD.
  ~
  ~ Use of this software is governed by the Business Source License
  ~ included in the file BSL.md
  ~
  ~ As of the Change Date specified in that file, in accordance with
  ~ the Business Source License, use of this software will be governed
  ~ by the Apache License, Version 2.0
  -->

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.automq.rocketmq.metadata.mapper.StreamMapper">

    <insert id="create" parameterType="Stream" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO stream (
            topic_id, queue_id, stream_role, group_id, src_node_id, dst_node_id, epoch, range_id, start_offset, state
        )
        VALUES (
            #{topicId},
            #{queueId},
            #{streamRole},
            #{groupId},
            #{srcNodeId},
            #{dstNodeId},
            #{epoch},
            #{rangeId},
            #{startOffset},
            #{state}
        )
    </insert>

    <insert id="insert" parameterType="Stream" useGeneratedKeys="false">
        INSERT INTO stream
            (id, topic_id, queue_id, stream_role, group_id, src_node_id, dst_node_id, epoch, range_id, start_offset, state)
        VALUES (
            #{id},
            #{topicId},
            #{queueId},
            #{streamRole},
            #{groupId},
            #{srcNodeId},
            #{dstNodeId},
            #{epoch},
            #{rangeId},
            #{startOffset},
            #{state}
        )
    </insert>

    <update id="increaseEpoch" parameterType="long">
        UPDATE stream
        SET epoch = epoch + 1
        WHERE id = #{id}
    </update>

    <select id="getByStreamId" resultType="Stream" parameterType="long">
        SELECT id, topic_id, queue_id, stream_role, group_id, src_node_id, dst_node_id, epoch, range_id, start_offset,
               state
        FROM stream
        WHERE id = #{id}
    </select>

    <update id="updateLastRange">
        UPDATE stream
        SET range_id = #{lastRangeId}
        WHERE id = #{id}
    </update>

    <update id="update">
        UPDATE stream
        <set>
            <if test="null != epoch">epoch = #{epoch},</if>
            <if test="null != startOffset">start_offset = #{startOffset},</if>
            <if test="null != rangeId">range_id = #{rangeId},</if>
            <if test="null != state">state = #{state},</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateStreamState">
        UPDATE stream
        SET state = #{state}
        <where>
            <if test="null != criteria.ids">
                <foreach item="item" collection="criteria.ids" open="id IN (" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="null != criteria.topicId">AND topic_id = #{criteria.topicId}</if>
            <if test="null != criteria.queueId">AND queue_id = #{criteria.queueId}</if>
            <if test="null != criteria.state">AND state = #{criteria.state}</if>
        </where>
    </update>

    <update id="updateStreamAssignment">
        UPDATE stream
        SET src_node_id = #{srcNodeId},
        dst_node_id = #{dstNodeId}
        <where>
            <if test="null != criteria.ids">
                <foreach item="item" collection="criteria.ids" open="id IN (" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="null != criteria.topicId">AND topic_id = #{criteria.topicId}</if>
            <if test="null != criteria.queueId">AND queue_id = #{criteria.queueId}</if>
            <if test="null != criteria.state">AND state = #{criteria.state}</if>
        </where>
    </update>

    <update id="planMove">
        UPDATE stream
        SET src_node_id = #{srcNodeId},
            dst_node_id = #{dstNodeId},
            state = #{state}
        <where>
            <if test="null != criteria.ids">
                <foreach item="item" collection="criteria.ids" open="id IN (" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="null != criteria.topicId">AND topic_id = #{criteria.topicId}</if>
            <if test="null != criteria.queueId">AND queue_id = #{criteria.queueId}</if>
            <if test="null != criteria.state">AND state = #{criteria.state}</if>
            <if test="null != criteria.updateTime">AND update_time >= #{criteria.updateTime}</if>
        </where>
    </update>

    <delete id="delete">
        DELETE FROM stream
        <where>
            <if test="null != id">id = #{id}</if>
        </where>
    </delete>

    <select id="queueEpoch" resultType="long">
        SELECT MAX(epoch)
        FROM stream
        WHERE topic_id = #{topicId} AND queue_id = #{queueId}
    </select>

    <select id="byCriteria" resultType="Stream">
        SELECT id, topic_id, queue_id, stream_role, group_id, src_node_id, dst_node_id, epoch, range_id, start_offset,
        state
        FROM stream
        <where>
            <if test="null != criteria.ids">
                <foreach item="item" collection="criteria.ids" open="id IN (" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="null != criteria.topicId">AND topic_id = #{criteria.topicId}</if>
            <if test="null != criteria.queueId">AND queue_id = #{criteria.queueId}</if>
            <if test="null != criteria.state">AND state = #{criteria.state}</if>
            <if test="null != criteria.updateTime">AND update_time >= #{criteria.updateTime}</if>
            <if test="null != criteria.srcNodeId">AND src_node_id = #{criteria.srcNodeId}</if>
            <if test="null != criteria.dstNodeId">AND dst_node_id = #{criteria.dstNodeId}</if>
            <if test="null != criteria.groupId">AND group_id = #{criteria.groupId}</if>
        </where>
    </select>

</mapper>