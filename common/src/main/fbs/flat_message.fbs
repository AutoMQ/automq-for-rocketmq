namespace com.automq.rocketmq.common.model.generated;

// A guide for writing schema: https://flatbuffers.dev/flatbuffers_guide_writing_schema.html

table KeyValue {
    key: string (id: 0, required);
    value: string (id: 1, required);
}

// The message in flatbuffer format
table FlatMessage {
  // The topic of the message
  topic_id: long;
  // The queue id of the message
  queue_id: int;
  // The tag of the message
  tag: string;
  // The keys of the message
  keys: string;
  // The group name of the message in the same topic
  message_group: string;
  // The user setted properties assiocated with the message
  user_properties: [KeyValue];
  // The system properties assiocated with the message
  system_properties: SystemProperties;
  // The carried payload of the message
  payload: [byte];
}

table SystemProperties {
    // The message id of the message
    message_id: string;
    // The message store timestamp
    store_timestamp: long;
    // The host that store the message
    store_host: string;
    // The born timestamp of the message
    born_timestamp: long;
    // The host that born the message
    born_host: string;
    // The count of the message delivery attempt
    delivery_attempts: int = -1;
    // Time-point at when the message is visible to clients, which is optional.
    delivery_timestamp: long = -1;
    // The trace context of the message
    trace_context: string;
    // The queue offset in the original queue
    // This field is only used in the retry message
    // Set the default value to -1 to tell the flatc compiler allocate space for this field to support inplace-update.
    original_queue_offset: long = -1;
    // For a dead letter message, this field is the original topic id
    dlq_original_topic_id: long;
    // For a dead letter message, this field is the original message id
    dlq_original_message_id: string;
}