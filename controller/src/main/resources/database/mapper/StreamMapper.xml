<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.automq.rocketmq.controller.metadata.database.mapper.StreamMapper">
    <resultMap id="BaseResultMap" type="apache.rocketmq.controller.v1.StreamMetadata">
        <id column="stream_id" jdbcType="BIGINT" property="streamId_"/>
        <result column="epoch" jdbcType="BIGINT" property="epoch_"/>
        <result column="range_id" jdbcType="INTEGER" property="rangeId_"/>
        <result column="start_offset" jdbcType="BIGINT" property="startOffset_"/>
        <result column="state" jdbcType="TINYINT" property="state_"/>
    </resultMap>

    <insert id="create" parameterType="apache.rocketmq.controller.v1.StreamMetadata">
        INSERT INTO stream (stream_id, epoch, range_id, start_offset, state)
        VALUES (#{streamId_}, #{epoch_}, #{rangeId_}, #{startOffset_}, #{state_})
    </insert>

    <update id="increaseEpoch" parameterType="long">
        UPDATE stream
        SET epoch = epoch + 1
        WHERE stream_id = #{id}
    </update>

    <select id="getByStreamId" resultMap="BaseResultMap" parameterType="long">
        SELECT stream_id, epoch, range_id, start_offset, state
        FROM stream
        WHERE stream_id = #{streamId, jdbcType=BIGINT}
    </select>

    <update id="updateLastRange">
        UPDATE stream
        SET range_id = #{lastRangeId}
        WHERE stream_id = #{streamId}
    </update>

    <update id="updateStreamState">
        UPDATE stream
        SET state = #{state}
        WHERE stream_id = #{streamId}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM stream WHERE stream_id = #{streamId}
    </delete>

    <select id="list" resultMap="BaseResultMap">
        SELECT stream_id, epoch, range_id, start_offset, state
        FROM stream
    </select>

</mapper>